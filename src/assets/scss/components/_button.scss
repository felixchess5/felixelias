///
/// Dimension by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Button */

	input[type="submit"],
	input[type="reset"],
	input[type="button"],
	button,
	.button {
		@include vendor('appearance', 'none');
		@include vendor('transition', (
			'background #{_duration(transition)} ease-in-out',
			'color #{_duration(transition)} ease-in-out',
			'transform #{_duration(transition)} ease-in-out',
			'box-shadow #{_duration(transition)} ease-in-out'
		));
		background: linear-gradient(135deg, transparent, rgba(_palette(accent-blue), 0.05));
		border-radius: _size(border-radius);
		border: 0;
		box-shadow: 
			inset 0 0 0 _size(border-width) _palette(accent-blue),
			0 2px 8px rgba(_palette(accent-blue), 0.1);
		color: _palette(accent-blue) !important;
		cursor: pointer;
		display: inline-block;
		font-size: 0.8rem;
		font-weight: _font(weight-bold);
		height: _size(element-height);
		letter-spacing: _font(letter-spacing);
		line-height: _size(element-height);
		outline: 0;
		padding: 0 1.25rem;
		text-align: center;
		text-decoration: none;
		text-transform: uppercase;
		white-space: nowrap;
		position: relative;
		overflow: hidden;

		// Ripple effect setup
		&:before {
			content: '';
			position: absolute;
			top: 50%;
			left: 50%;
			width: 0;
			height: 0;
			border-radius: 50%;
			background: rgba(_palette(accent-blue), 0.3);
			transform: translate(-50%, -50%);
			transition: width 0.6s ease-out, height 0.6s ease-out;
		}

		&:hover {
			background: linear-gradient(135deg, 
				rgba(_palette(accent-blue), 0.1), 
				rgba(_palette(accent-blue), 0.2)
			);
			transform: translateY(-1px);
			box-shadow: 
				inset 0 0 0 _size(border-width) _palette(accent-blue-light),
				0 4px 16px rgba(_palette(accent-blue), 0.2);
			color: _palette(accent-blue-light) !important;
		}

		&:active {
			transform: translateY(0);
			background: linear-gradient(135deg, 
				rgba(_palette(accent-blue), 0.2), 
				rgba(_palette(accent-blue), 0.3)
			);

			&:before {
				width: 300px;
				height: 300px;
			}
		}

		&:focus {
			outline: none;
			box-shadow: 
				inset 0 0 0 _size(border-width) _palette(accent-blue-light),
				0 0 0 3px rgba(_palette(accent-blue), 0.3),
				0 2px 8px rgba(_palette(accent-blue), 0.1);
		}

		&.icon {
			&:before {
				margin-right: 0.5em;
			}
		}

		&.fit {
			display: block;
			margin: 0 0 (_size(element-margin) * 0.5) 0;
			width: 100%;
		}

		&.special {
			background: linear-gradient(135deg, 
				_palette(accent-warm), 
				_palette(accent-warm-light)
			);
			color: _palette(fg-bold) !important;
			font-weight: _font(weight-bold);
			box-shadow: 
				0 4px 16px rgba(_palette(accent-warm), 0.3),
				inset 0 1px 0 rgba(255, 255, 255, 0.2);

			&:before {
				background: rgba(255, 255, 255, 0.3);
			}

			&:hover {
				background: linear-gradient(135deg, 
					_palette(accent-warm-light), 
					lighten(_palette(accent-warm), 10%)
				);
				transform: translateY(-2px);
				box-shadow: 
					0 6px 24px rgba(_palette(accent-warm), 0.4),
					inset 0 1px 0 rgba(255, 255, 255, 0.3);
			}

			&:active {
				transform: translateY(0);
				background: linear-gradient(135deg, 
					darken(_palette(accent-warm), 5%), 
					_palette(accent-warm)
				);

				&:before {
					width: 300px;
					height: 300px;
				}
			}

			&:focus {
				box-shadow: 
					0 0 0 3px rgba(_palette(accent-warm), 0.4),
					0 4px 16px rgba(_palette(accent-warm), 0.3),
					inset 0 1px 0 rgba(255, 255, 255, 0.2);
			}
		}

		&.primary {
			background: linear-gradient(135deg, 
				_palette(accent-green), 
				_palette(accent-green-light)
			);
			color: _palette(fg-bold) !important;
			box-shadow: 
				0 4px 16px rgba(_palette(accent-green), 0.3),
				inset 0 1px 0 rgba(255, 255, 255, 0.2);

			&:before {
				background: rgba(255, 255, 255, 0.3);
			}

			&:hover {
				background: linear-gradient(135deg, 
					_palette(accent-green-light), 
					lighten(_palette(accent-green), 10%)
				);
				transform: translateY(-2px);
				box-shadow: 
					0 6px 24px rgba(_palette(accent-green), 0.4),
					inset 0 1px 0 rgba(255, 255, 255, 0.3);
			}

			&:active {
				transform: translateY(0);

				&:before {
					width: 300px;
					height: 300px;
				}
			}
		}

		&.disabled,
		&:disabled {
			@include vendor('pointer-events', 'none');
			cursor: default;
			opacity: 0.25;
		}
	}

	input[type="submit"],
	input[type="reset"],
	input[type="button"],
	button {
		line-height: calc(#{_size(element-height)} - 2px);
	}